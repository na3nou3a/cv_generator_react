{"version":3,"sources":["components/Footer.js","components/Header.js","components/Personal.js","components/Experience.js","components/Hobies.js","components/Skills.js","components/Languages.js","components/Education.js","components/Certification.js","components/CvBody.js","empty_avatar.png","components/CvHeader.js","components/Cv.js","components/Main.js","App.js","index.js"],"names":["Footer","Date","getFullYear","Header","className","Personal","previewMode","useContext","AppContext","useState","gender","birthday","status","tel","email","adress","editFlag","info","setInfo","handleChange","e","value","target","prop","name","onSubmit","preventDefault","htmlFor","type","id","onChange","onClick","Experience","experience","uniqid","role","company","from","to","description","experiences","isOpenModel","experiencesInfo","setExperiencesInfo","addExperience","toggleEdit","item","find","obj","showModel","showPreview","map","exp","showExperiences","cols","rows","newExperiences","filter","remove","formInput","change","required","placeholder","length","start","Hobies","hoby","text","hobies","hobiesInfo","setHobiesInfo","addHoby","newhobies","Skills","skill","skills","skillsInfo","setSkillsInfo","addSkill","newSkills","Languages","language","languages","languagesInfo","setLanguagesInfo","addLanguage","newlanguages","Education","education","school","degree","location","educations","educationsInfo","setEducationsInfo","addEducation","edu","showEducations","newEducations","Certification","certification","title","certifications","certificationsInfo","setCertificationsInfo","addCertification","cert","showCertifications","newCertifications","LeftSide","RightSide","Title","CvBody","Avatar","emptyAvatar","avatar","setAvatar","src","alt","URL","createObjectURL","files","Identity","firstName","lastName","profile","header","setHeader","showHeader","CvHeader","Cv","forwardRef","props","ref","React","createContext","Main","setPreviewMode","componentRef","useRef","handlePrint","useReactToPrint","content","current","Provider","classList","add","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ee8ac42.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright {new Date().getFullYear()}</p>\n    </footer>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>cv generator</h1>\n    </header>\n  );\n};\nexport default Header;\n","import React, { useState, useContext } from 'react';\nimport { AppContext } from './Main';\n\nfunction Personal() {\n  const { previewMode } = useContext(AppContext);\n  const [info, setInfo] = useState({\n    gender: 'Male',\n    birthday: '11/12/1989',\n    status: 'Single',\n    tel: '+44 (0)20 7666 8555',\n    email: 'example@gmail.com',\n    adress: '120 Great Portland Street London W2W 6tQ',\n    editFlag: false,\n  });\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    const prop = e.target.name;\n    setInfo({\n      ...info,\n      [prop]: value,\n    });\n  };\n\n  if (previewMode) {\n    return (\n      <div className='personal'>\n        <div>\n          <h4>Gender:</h4>\n          <h5>{info.gender}</h5>\n        </div>\n        <div>\n          <h4>Staus:</h4>\n          <h5>{info.status}</h5>\n        </div>\n        <div>\n          <h4>Birthday:</h4>\n          <h5>{info.birthday}</h5>\n        </div>\n        <div>\n          <h4>tel:</h4>\n          <h5>{info.tel}</h5>\n        </div>\n        <div>\n          <h4>Email:</h4>\n          <h5>{info.email}</h5>\n        </div>\n        <div>\n          <h4>Adress:</h4>\n          <h5>{info.adress}</h5>\n        </div>\n      </div>\n    );\n  }\n\n  if (!info.editFlag) {\n    return (\n      <div className='personal'>\n        <div>\n          <h4>Gender:</h4>\n          <h5>{info.gender}</h5>\n        </div>\n        <div>\n          <h4>Staus:</h4>\n          <h5>{info.status}</h5>\n        </div>\n        <div>\n          <h4>Birthday:</h4>\n          <h5>{info.birthday}</h5>\n        </div>\n        <div>\n          <h4>tel:</h4>\n          <h5>{info.tel}</h5>\n        </div>\n        <div>\n          <h4>Email:</h4>\n          <h5>{info.email}</h5>\n        </div>\n        <div>\n          <h4>Adress:</h4>\n          <h5>{info.adress}</h5>\n        </div>\n        <button\n          type='button'\n          className='btn btn-center'\n          onClick={() => setInfo({ ...info, editFlag: !info.editFlag })}\n        >\n          edit\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <form className='form' onSubmit={(e) => e.preventDefault()}>\n      <div className='flex'>\n        <label htmlFor='gender'>Gender: </label>\n        <input\n          type='text'\n          name='gender'\n          id='gender'\n          value={info.gender}\n          onChange={handleChange}\n        />\n      </div>\n      <div className='flex'>\n        <label htmlFor='birthday'>Birthday: </label>\n        <input\n          type='text'\n          name='birthday'\n          id='birthday'\n          value={info.birthday}\n          onChange={handleChange}\n        />\n      </div>\n      <div className='flex'>\n        <label htmlFor='status'>Status: </label>\n        <input\n          type='text'\n          name='status'\n          id='status'\n          value={info.status}\n          onChange={handleChange}\n        />\n      </div>\n      <div className='flex'>\n        <label htmlFor='tel'>tel Number: </label>\n        <input\n          type='tel'\n          name='tel'\n          id='tel'\n          value={info.tel}\n          onChange={handleChange}\n        />\n      </div>\n      <div className='flex'>\n        <label htmlFor='email'>Email Adress: </label>\n        <input\n          type='text'\n          name='email'\n          id='email'\n          value={info.email}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className='flex'>\n        <label htmlFor='adress'>Adress: </label>\n        <input\n          type='text'\n          name='adress'\n          id='adress'\n          value={info.adress}\n          onChange={handleChange}\n        />\n      </div>\n      <button\n        type='submit'\n        className='btn .btn-center'\n        onClick={() => setInfo({ ...info, editFlag: !info.editFlag })}\n      >\n        save\n      </button>\n    </form>\n  );\n}\n\nexport default Personal;\n","import React, { useState, useContext } from 'react';\nimport uniqid from 'uniqid';\nimport { AppContext } from './Main';\n\nfunction Experience() {\n  const { previewMode } = useContext(AppContext);\n  const [experiencesInfo, setExperiencesInfo] = useState({\n    experience: {\n      id: uniqid(),\n      role: '',\n      company: '',\n      from: '',\n      to: '',\n      description: '',\n      editFlag: false,\n    },\n    experiences: [],\n    isOpenModel: false,\n  });\n\n  const addExperience = (e) => {\n    e.preventDefault();\n    setExperiencesInfo({\n      experiences: [...experiencesInfo.experiences, experiencesInfo.experience],\n      experience: {\n        id: uniqid(),\n        role: '',\n        company: '',\n        from: '',\n        to: '',\n        description: '',\n        editFlag: false,\n      },\n      isOpenModel: false,\n    });\n  };\n\n  const toggleEdit = (id) => {\n    const { experiences } = experiencesInfo;\n    const item = experiences.find((obj) => obj.id === id);\n    item.editFlag = !item.editFlag;\n    setExperiencesInfo({\n      ...experiencesInfo,\n      experiences: [...experiences],\n    });\n  };\n\n  const handleChange = (e, id) => {\n    const { experiences } = experiencesInfo;\n    const prop = e.target.name;\n    const value = e.target.value;\n    const item = experiences.find((obj) => obj.id === id);\n    item[prop] = value;\n    setExperiencesInfo({\n      ...experiencesInfo,\n      experiences: [...experiences],\n    });\n  };\n\n  const remove = (id) => {\n    const { experiences } = experiencesInfo;\n    const newExperiences = experiences.filter((obj) => obj.id !== id);\n    setExperiencesInfo({\n      ...experiencesInfo,\n      experiences: newExperiences,\n    });\n  };\n\n  const start = () => {\n    const { isOpenModel, experiences } = experiencesInfo;\n    if (previewMode) {\n      return <>{showPreview()}</>;\n    }\n    if (isOpenModel) {\n      return (\n        <>\n          {showExperiences()}\n          {formInput()}\n        </>\n      );\n    }\n    if (!experiences.length) {\n      return <>{formInput()}</>;\n    }\n    return (\n      <>\n        {showExperiences()}\n        <button type='button' className='btn btn-center' onClick={showModel}>\n          New Experience\n        </button>\n      </>\n    );\n  };\n\n  const showModel = () => {\n    setExperiencesInfo({\n      ...experiencesInfo,\n      isOpenModel: true,\n    });\n  };\n\n  const showPreview = () => {\n    const { experiences } = experiencesInfo;\n    return experiences.map((exp) => {\n      const { id, role, company, description, from, to } = exp;\n      return (\n        <div key={id} className='infoCard'>\n          <div className='flex'>\n            <div className='col first'>\n              <h4>{role}</h4>\n              <h5>\n                {from} - {to}\n              </h5>\n            </div>\n            <div className='col last'>\n              <h4>{company}</h4>\n              <p>{description}</p>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const showExperiences = () => {\n    const { experiences } = experiencesInfo;\n    return experiences.map((exp) => {\n      const { id, role, company, description, from, to, editFlag } = exp;\n      if (!editFlag) {\n        return (\n          <div key={id} className='infoCard'>\n            <div className='flex'>\n              <div className='col first'>\n                <h4>{role}</h4>\n                <h5>\n                  {from} - {to}\n                </h5>\n              </div>\n\n              <div className='col last'>\n                <h4>{company}</h4>\n                <p>{description}</p>\n              </div>\n            </div>\n\n            <div className='btn-groupe'>\n              <button\n                className='btn'\n                type='button'\n                onClick={() => toggleEdit(id)}\n              >\n                edit\n              </button>\n              <button className='btn' type='button' onClick={() => remove(id)}>\n                remove\n              </button>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div key={id} className='info'>\n          <div className='flex'>\n            <label htmlFor='role'>Role: </label>\n            <input\n              type='text'\n              name='role'\n              id='role'\n              value={role}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='company'>Company: </label>\n            <input\n              type='text'\n              name='company'\n              id='company'\n              value={company}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='from'>From: </label>\n            <input\n              type='text'\n              name='from'\n              id='from'\n              value={from}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='to'>To: </label>\n            <input\n              type='text'\n              name='to'\n              id='to'\n              value={to}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='col'>\n            <label htmlFor='description'>Description or Achievements: </label>\n            <textarea\n              name='description'\n              id='description'\n              cols='30'\n              rows='10'\n              value={description}\n              onChange={(e) => handleChange(e, id)}\n            ></textarea>\n          </div>\n          <button\n            className='btn btn-center'\n            type='button'\n            onClick={() => toggleEdit(id)}\n          >\n            save\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const formInput = () => {\n    const change = (e) => {\n      const prop = e.target.name;\n      const value = e.target.value;\n      setExperiencesInfo({\n        ...experiencesInfo,\n        experience: { ...experiencesInfo.experience, [prop]: value },\n      });\n    };\n    const { role, company, description, from, to } = experiencesInfo.experience;\n    return (\n      <form className='form' onSubmit={(e) => e.preventDefault()}>\n        <div className='flex'>\n          <label htmlFor='role'>Role: </label>\n          <input\n            type='text'\n            name='role'\n            id='role'\n            required='required'\n            placeholder='Web Developper'\n            value={role}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='company'>Company: </label>\n          <input\n            type='text'\n            name='company'\n            id='company'\n            placeholder='CompanyX'\n            value={company}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='from'>From: </label>\n          <input\n            type='text'\n            name='from'\n            id='from'\n            placeholder='April 2020'\n            value={from}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='to'>To: </label>\n          <input\n            type='text'\n            name='to'\n            id='to'\n            placeholder='Jully 2020'\n            value={to}\n            onChange={change}\n          />\n        </div>\n        <div className='col'>\n          <label htmlFor='description'>Description or Achievements: </label>\n          <textarea\n            name='description'\n            id='description'\n            cols='30'\n            rows='10'\n            value={description}\n            onChange={change}\n          ></textarea>\n        </div>\n        <button\n          className='btn btn-center'\n          type='submit'\n          onClick={addExperience}\n        >\n          add experience\n        </button>\n      </form>\n    );\n  };\n\n  return <>{start()}</>;\n}\n\nexport default Experience;\n","import React, { useState, useContext } from 'react';\nimport { FaEdit, FaSave, FaTrash } from 'react-icons/fa';\nimport uniqid from 'uniqid';\nimport { AppContext } from './Main';\n\nfunction Hobies() {\n  const { previewMode } = useContext(AppContext);\n  const [hobiesInfo, setHobiesInfo] = useState({\n    hoby: { text: '', editFlag: false, id: uniqid() },\n    hobies: [],\n  });\n\n  const addHoby = (e) => {\n    e.preventDefault();\n    const { hobies, hoby } = hobiesInfo;\n    setHobiesInfo({\n      ...hobiesInfo,\n      hobies: [...hobies, hoby],\n      hoby: { ...hoby, text: '', id: uniqid() },\n    });\n  };\n\n  const toggleEdit = (id) => {\n    const { hobies } = hobiesInfo;\n    const item = hobies.find((obj) => obj.id === id);\n    item.editFlag = !item.editFlag;\n    setHobiesInfo({\n      ...hobiesInfo,\n      hobies: hobies,\n    });\n  };\n\n  const handleChange = (e, id) => {\n    const { hobies } = hobiesInfo;\n    const item = hobies.find((obj) => obj.id === id);\n    item.text = e.target.value;\n    setHobiesInfo({\n      ...hobiesInfo,\n      hobies: hobies,\n    });\n  };\n\n  const remove = (id) => {\n    const { hobies } = hobiesInfo;\n    const newhobies = hobies.filter((obj) => obj.id !== id);\n    setHobiesInfo({\n      ...hobiesInfo,\n      hobies: newhobies,\n    });\n  };\n\n  const showPreview = () => {\n    const { hobies } = hobiesInfo;\n\n    return hobies.map((hoby) => {\n      const { text, id } = hoby;\n      return <h4 key={id}>{text}</h4>;\n    });\n  };\n\n  const showHobies = () => {\n    const { hobies } = hobiesInfo;\n\n    return hobies.map((hoby) => {\n      const { text, editFlag, id } = hoby;\n      if (!editFlag) {\n        return (\n          <div key={id} className='info'>\n            <div className='flex'>\n              <h4>{text}</h4>\n              <button\n                className='icon edit'\n                type='button'\n                onClick={() => toggleEdit(id)}\n              >\n                <FaEdit />\n              </button>\n              <button\n                className='icon remove'\n                type='button'\n                onClick={() => remove(id)}\n              >\n                <FaTrash />\n              </button>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div key={id} className='form-control'>\n          <input\n            type='text'\n            name='edit'\n            value={text}\n            onChange={(e) => handleChange(e, id)}\n          />\n          <button\n            className='icon save'\n            type='button'\n            onClick={() => toggleEdit(id)}\n          >\n            <FaSave />\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const formInput = () => {\n    const { text } = hobiesInfo.hoby;\n    return (\n      <div className='form-control'>\n        <input\n          type='text'\n          name='hoby'\n          value={text}\n          onChange={(e) =>\n            setHobiesInfo({\n              ...hobiesInfo,\n              hoby: { ...hobiesInfo.hoby, text: e.target.value },\n            })\n          }\n        />\n        <button className='btn' type='button' onClick={addHoby}>\n          add\n        </button>\n      </div>\n    );\n  };\n  if (previewMode) {\n    return <>{showPreview()}</>;\n  }\n  return (\n    <>\n      {showHobies()}\n      {formInput()}\n    </>\n  );\n}\n\nexport default Hobies;\n","import React, { useState, useContext } from 'react';\nimport { FaEdit, FaSave, FaTrash } from 'react-icons/fa';\nimport uniqid from 'uniqid';\nimport { AppContext } from './Main';\n\nfunction Skills() {\n  const { previewMode } = useContext(AppContext);\n  const [skillsInfo, setSkillsInfo] = useState({\n    skill: { text: '', editFlag: false, id: uniqid() },\n    skills: [],\n  });\n\n  const addSkill = (e) => {\n    e.preventDefault();\n    const { skills, skill } = skillsInfo;\n    setSkillsInfo({\n      ...skillsInfo,\n      skills: [...skills, skill],\n      skill: { ...skill, text: '', id: uniqid() },\n    });\n  };\n\n  const toggleEdit = (id) => {\n    const { skills } = skillsInfo;\n    const item = skills.find((obj) => obj.id === id);\n    item.editFlag = !item.editFlag;\n    setSkillsInfo({\n      ...skillsInfo,\n      skills: skills,\n    });\n  };\n\n  const handleChange = (e, id) => {\n    const { skills } = skillsInfo;\n    const item = skills.find((obj) => obj.id === id);\n    item.text = e.target.value;\n    setSkillsInfo({\n      ...skillsInfo,\n      skills: skills,\n    });\n  };\n\n  const remove = (id) => {\n    const { skills } = skillsInfo;\n    const newSkills = skills.filter((obj) => obj.id !== id);\n    setSkillsInfo({\n      ...skillsInfo,\n      skills: newSkills,\n    });\n  };\n\n  const showPreview = () => {\n    const { skills } = skillsInfo;\n\n    return skills.map((skill) => {\n      const { text, id } = skill;\n      return <h4 key={id}>{text}</h4>;\n    });\n  };\n\n  const showSkills = () => {\n    const { skills } = skillsInfo;\n\n    return skills.map((skill) => {\n      const { text, editFlag, id } = skill;\n      if (!editFlag) {\n        return (\n          <div key={id} className='info'>\n            <div className='flex'>\n              <h4>{text}</h4>\n              <button\n                className='icon edit'\n                type='button'\n                onClick={() => toggleEdit(id)}\n              >\n                <FaEdit />\n              </button>\n              <button\n                className='icon remove'\n                type='button'\n                onClick={() => remove(id)}\n              >\n                <FaTrash />\n              </button>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div key={id} className='form-control'>\n          <input\n            type='text'\n            name='edit'\n            value={text}\n            onChange={(e) => handleChange(e, id)}\n          />\n          <button\n            className='icon save'\n            type='button'\n            onClick={() => toggleEdit(id)}\n          >\n            <FaSave />\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const formInput = () => {\n    const { text } = skillsInfo.skill;\n    return (\n      <div className='form-control'>\n        <input\n          type='text'\n          name='skill'\n          value={text}\n          onChange={(e) =>\n            setSkillsInfo({\n              ...skillsInfo,\n              skill: { ...skillsInfo.skill, text: e.target.value },\n            })\n          }\n        />\n\n        <button className='btn' type='button' onClick={addSkill}>\n          add\n        </button>\n      </div>\n    );\n  };\n\n  if (previewMode) {\n    return <>{showPreview()}</>;\n  }\n  return (\n    <>\n      {showSkills()}\n      {formInput()}\n    </>\n  );\n}\n\nexport default Skills;\n","import React, { useState, useContext } from 'react';\nimport { FaEdit, FaSave, FaTrash } from 'react-icons/fa';\nimport uniqid from 'uniqid';\nimport { AppContext } from './Main';\n\nfunction Languages() {\n  const { previewMode } = useContext(AppContext);\n  const [languagesInfo, setLanguagesInfo] = useState({\n    language: { text: '', editFlag: false, id: uniqid() },\n    languages: [],\n  });\n\n  const addLanguage = (e) => {\n    e.preventDefault();\n    const { languages, language } = languagesInfo;\n    setLanguagesInfo({\n      ...languagesInfo,\n      languages: [...languages, language],\n      language: { ...language, text: '', id: uniqid() },\n    });\n  };\n\n  const toggleEdit = (id) => {\n    const { languages } = languagesInfo;\n    const item = languages.find((obj) => obj.id === id);\n    item.editFlag = !item.editFlag;\n    setLanguagesInfo({\n      ...languagesInfo,\n      languages: languages,\n    });\n  };\n\n  const handleChange = (e, id) => {\n    const { languages } = languagesInfo;\n    const item = languages.find((obj) => obj.id === id);\n    item.text = e.target.value;\n    setLanguagesInfo({\n      ...languagesInfo,\n      languages: languages,\n    });\n  };\n\n  const remove = (id) => {\n    const { languages } = languagesInfo;\n    const newlanguages = languages.filter((obj) => obj.id !== id);\n    setLanguagesInfo({\n      ...languagesInfo,\n      languages: newlanguages,\n    });\n  };\n\n  const showPreview = () => {\n    const { languages } = languagesInfo;\n\n    return languages.map((language) => {\n      const { text, id } = language;\n      return <h4 key={id}>{text}</h4>;\n    });\n  };\n\n  const showLanguages = () => {\n    const { languages } = languagesInfo;\n\n    return languages.map((language) => {\n      const { text, editFlag, id } = language;\n\n      if (!editFlag) {\n        return (\n          <div key={id} className='info'>\n            <div className='flex'>\n              <h4>{text}</h4>\n              <button\n                className='icon edit'\n                type='button'\n                onClick={() => toggleEdit(id)}\n              >\n                <FaEdit />\n              </button>\n              <button\n                className='icon remove'\n                type='button'\n                onClick={() => remove(id)}\n              >\n                <FaTrash />\n              </button>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div key={id} className='form-control'>\n          <input\n            type='text'\n            name='edit'\n            value={text}\n            onChange={(e) => handleChange(e, id)}\n          />\n          <button\n            className='icon save'\n            type='button'\n            onClick={() => toggleEdit(id)}\n          >\n            <FaSave />\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const formInput = () => {\n    const { text } = languagesInfo.language;\n    return (\n      <div className='form-control'>\n        <input\n          type='text'\n          name='language'\n          value={text}\n          onChange={(e) =>\n            setLanguagesInfo({\n              ...languagesInfo,\n              language: { ...languagesInfo.language, text: e.target.value },\n            })\n          }\n        />\n        <button className='btn' type='button' onClick={addLanguage}>\n          add\n        </button>\n      </div>\n    );\n  };\n  if (previewMode) {\n    return <>{showPreview()}</>;\n  }\n  return (\n    <>\n      {showLanguages()}\n      {formInput()}\n    </>\n  );\n}\n\nexport default Languages;\n","import React, { useState, useContext } from 'react';\nimport uniqid from 'uniqid';\nimport { AppContext } from './Main';\n\nfunction Education() {\n  const { previewMode } = useContext(AppContext);\n  const [educationsInfo, setEducationsInfo] = useState({\n    education: {\n      id: uniqid(),\n      school: '',\n      degree: '',\n      location: '',\n      from: '',\n      to: '',\n      editFlag: false,\n    },\n    educations: [],\n    isOpenModel: false,\n  });\n\n  const addEducation = (e) => {\n    e.preventDefault();\n    setEducationsInfo({\n      educations: [...educationsInfo.educations, educationsInfo.education],\n      education: {\n        id: uniqid(),\n        school: '',\n        degree: '',\n        location: '',\n        from: '',\n        to: '',\n        editFlag: false,\n      },\n      isOpenModel: false,\n    });\n  };\n\n  const toggleEdit = (id) => {\n    const { educations } = educationsInfo;\n    const item = educations.find((obj) => obj.id === id);\n    item.editFlag = !item.editFlag;\n    setEducationsInfo({\n      ...educationsInfo,\n      educations: [...educations],\n    });\n  };\n\n  const handleChange = (e, id) => {\n    const { educations } = educationsInfo;\n    const prop = e.target.name;\n    const value = e.target.value;\n    const item = educations.find((obj) => obj.id === id);\n    item[prop] = value;\n    setEducationsInfo({\n      ...educationsInfo,\n      educations: [...educations],\n    });\n  };\n\n  const remove = (id) => {\n    const { educations } = educationsInfo;\n    const newEducations = educations.filter((obj) => obj.id !== id);\n    setEducationsInfo({\n      ...educationsInfo,\n      educations: newEducations,\n    });\n  };\n\n  const start = () => {\n    const { isOpenModel, educations } = educationsInfo;\n    if (previewMode) {\n      return <>{showPreview()}</>;\n    }\n    if (isOpenModel) {\n      return (\n        <>\n          {showEducations()}\n          {formInput()}\n        </>\n      );\n    }\n    if (!educations.length) {\n      return <>{formInput()}</>;\n    }\n    return (\n      <>\n        {showEducations()}\n        <button type='button' className='btn btn-center' onClick={showModel}>\n          New Education\n        </button>\n      </>\n    );\n  };\n\n  const showModel = () => {\n    setEducationsInfo({\n      ...educationsInfo,\n      isOpenModel: true,\n    });\n  };\n\n  const showPreview = () => {\n    const { educations } = educationsInfo;\n    return educations.map((edu) => {\n      const { id, school, degree, location, from, to } = edu;\n      return (\n        <div key={id} className='infoCard'>\n          <div className='flex'>\n            <div className='col first'>\n              <h4>{degree}</h4>\n              <h5>\n                {from} - {to}\n              </h5>\n            </div>\n            <div className='col last'>\n              <h4>{school}</h4>\n              <h5>{location}</h5>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const showEducations = () => {\n    const { educations } = educationsInfo;\n    return educations.map((edu) => {\n      const { id, school, degree, location, from, to, editFlag } = edu;\n      if (!editFlag) {\n        return (\n          <div key={id} className='infoCard'>\n            <div className='flex'>\n              <div className='col first'>\n                <h4>{degree}</h4>\n                <h5>\n                  {from} - {to}\n                </h5>\n              </div>\n              <div className='col last'>\n                <h4>{school}</h4>\n                <h5>{location}</h5>\n              </div>\n            </div>\n            <div className='btn-groupe'>\n              <button\n                className='btn'\n                type='button'\n                onClick={() => toggleEdit(id)}\n              >\n                edit\n              </button>\n              <button className='btn' type='button' onClick={() => remove(id)}>\n                remove\n              </button>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div key={id} className='info'>\n          <div className='flex'>\n            <label htmlFor='degree'>Degree: </label>\n            <input\n              type='text'\n              name='degree'\n              id='degree'\n              value={degree}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='school'>School: </label>\n            <input\n              type='text'\n              name='school'\n              id='school'\n              value={school}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='location'>Location: </label>\n            <input\n              type='text'\n              name='location'\n              id='location'\n              value={location}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='from'>From: </label>\n            <input\n              type='text'\n              name='from'\n              id='from'\n              value={from}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='to'>To: </label>\n            <input\n              type='text'\n              name='to'\n              id='to'\n              value={to}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <button\n            className='btn btn-center'\n            type='button'\n            onClick={() => toggleEdit(id)}\n          >\n            save\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const formInput = () => {\n    const change = (e) => {\n      const prop = e.target.name;\n      const value = e.target.value;\n      setEducationsInfo({\n        ...educationsInfo,\n        education: { ...educationsInfo.education, [prop]: value },\n      });\n    };\n    const { school, degree, location, from, to } = educationsInfo.education;\n    return (\n      <form className='form' onSubmit={(e) => e.preventDefault()}>\n        <div className='flex'>\n          <label htmlFor='degree'>Degree: </label>\n          <input\n            type='text'\n            name='degree'\n            id='degree'\n            placeholder='Design'\n            value={degree}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='school'>School: </label>\n          <input\n            type='text'\n            name='school'\n            id='school'\n            placeholder='Cool University'\n            value={school}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='location'>Location: </label>\n          <input\n            type='text'\n            name='location'\n            id='location'\n            placeholder='London'\n            value={location}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='from'>From: </label>\n          <input\n            type='text'\n            name='from'\n            id='from'\n            placeholder='April 2020'\n            value={from}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='to'>To: </label>\n          <input\n            type='text'\n            name='to'\n            placeholder='Jully 2020'\n            id='to'\n            value={to}\n            onChange={change}\n          />\n        </div>\n        <button className='btn btn-center' type='button' onClick={addEducation}>\n          add education\n        </button>\n      </form>\n    );\n  };\n\n  return <>{start()}</>;\n}\n\nexport default Education;\n","import React, { useState, useContext } from 'react';\nimport uniqid from 'uniqid';\nimport { AppContext } from './Main';\n\nfunction Certification() {\n  const { previewMode } = useContext(AppContext);\n  const [certificationsInfo, setCertificationsInfo] = useState({\n    certification: {\n      id: uniqid(),\n      title: '',\n      text: '',\n      editFlag: false,\n    },\n    certifications: [],\n    isOpenModel: false,\n  });\n\n  const addCertification = (e) => {\n    e.preventDefault();\n    setCertificationsInfo({\n      certifications: [\n        ...certificationsInfo.certifications,\n        certificationsInfo.certification,\n      ],\n      certification: {\n        id: uniqid(),\n        title: '',\n        text: '',\n        editFlag: false,\n      },\n      isOpenModel: false,\n    });\n  };\n\n  const toggleEdit = (id) => {\n    const { certifications } = certificationsInfo;\n    const item = certifications.find((obj) => obj.id === id);\n    item.editFlag = !item.editFlag;\n    setCertificationsInfo({\n      ...certificationsInfo,\n      certifications: [...certifications],\n    });\n  };\n\n  const handleChange = (e, id) => {\n    const { certifications } = certificationsInfo;\n    const prop = e.target.name;\n    const value = e.target.value;\n    const item = certifications.find((obj) => obj.id === id);\n    item[prop] = value;\n    setCertificationsInfo({\n      ...certificationsInfo,\n      certifications: [...certifications],\n    });\n  };\n\n  const remove = (id) => {\n    const { certifications } = certificationsInfo;\n    const newCertifications = certifications.filter((obj) => obj.id !== id);\n    setCertificationsInfo({\n      ...certificationsInfo,\n      certifications: newCertifications,\n    });\n  };\n\n  const start = () => {\n    const { isOpenModel, certifications } = certificationsInfo;\n    if (previewMode) {\n      return <>{showPreview()}</>;\n    }\n    if (isOpenModel) {\n      return (\n        <>\n          {showCertifications()}\n          {formInput()}\n        </>\n      );\n    }\n    if (!certifications.length) {\n      return <>{formInput()}</>;\n    }\n    return (\n      <>\n        {showCertifications()}\n        <button type='button' className='btn btn-center' onClick={showModel}>\n          New Certification\n        </button>\n      </>\n    );\n  };\n\n  const showModel = () => {\n    setCertificationsInfo({\n      ...certificationsInfo,\n      isOpenModel: true,\n    });\n  };\n\n  const showPreview = () => {\n    const { certifications } = certificationsInfo;\n    return certifications.map((cert) => {\n      const { id, title, text } = cert;\n      return (\n        <div key={id} className='infoCard'>\n          <div className='flex'>\n            <div className='col first'>\n              <h5>{title}: </h5>\n            </div>\n            <div className='col last'>\n              <h4>{text}</h4>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const showCertifications = () => {\n    const { certifications } = certificationsInfo;\n    return certifications.map((cert) => {\n      const { id, title, text, editFlag } = cert;\n      if (!editFlag) {\n        return (\n          <div key={id} className='infoCard'>\n            <div className='flex'>\n              <div className='col first'>\n                <h5>{title}: </h5>\n              </div>\n              <div className='col last'>\n                <h4>{text}</h4>\n              </div>\n            </div>\n            <div className='btn-groupe'>\n              <button\n                className='btn'\n                type='button'\n                onClick={() => toggleEdit(id)}\n              >\n                edit\n              </button>\n              <button className='btn' type='button' onClick={() => remove(id)}>\n                remove\n              </button>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div key={id} className='info'>\n          <div className='flex'>\n            <label htmlFor='title'>Title: </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Programming Languages'\n              value={title}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='text'>Certification / Certifications: </label>\n            <input\n              type='text'\n              name='text'\n              id='text'\n              placeholder='Html, Css, JavaScript, PHP'\n              value={text}\n              onChange={(e) => handleChange(e, id)}\n            />\n          </div>\n          <button\n            className='btn btn-center'\n            type='button'\n            onClick={() => toggleEdit(id)}\n          >\n            save\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const formInput = () => {\n    const change = (e) => {\n      const prop = e.target.name;\n      const value = e.target.value;\n      setCertificationsInfo({\n        ...certificationsInfo,\n        certification: { ...certificationsInfo.certification, [prop]: value },\n      });\n    };\n    const { title, text } = certificationsInfo.certification;\n    return (\n      <form className='form' onSubmit={(e) => e.preventDefault()}>\n        <div className='flex'>\n          <label htmlFor='title'>Title: </label>\n          <input\n            type='text'\n            name='title'\n            id='title'\n            placeholder='Programming Languages'\n            value={title}\n            onChange={change}\n          />\n        </div>\n        <div className='flex'>\n          <label htmlFor='text'>Certification / Certifications: </label>\n          <input\n            type='text'\n            name='text'\n            id='text'\n            placeholder='Html, Css, JavaScript, PHP'\n            value={text}\n            onChange={change}\n          />\n        </div>\n        <button\n          className='btn btn-center'\n          type='button'\n          onClick={addCertification}\n        >\n          add certification\n        </button>\n      </form>\n    );\n  };\n\n  return <>{start()}</>;\n}\n\nexport default Certification;\n","import React from 'react';\nimport Personal from './Personal';\nimport Experience from './Experience';\nimport Hobies from './Hobies';\nimport Skills from './Skills';\nimport Languages from './Languages';\nimport Education from './Education';\nimport Certification from './Certification';\n\nconst CvBody = () => {\n  return (\n    <div className='cv-body'>\n      <LeftSide />\n      <RightSide />\n    </div>\n  );\n};\n\nconst LeftSide = () => {\n  return (\n    <div className='left-side side'>\n      <div className='comp'>\n        <Title text='About' />\n        <Personal />\n      </div>\n      <div className='comp'>\n        <Title text='skills' />\n        <Skills />\n      </div>\n      <div className='comp'>\n        <Title text='languages' />\n        <Languages />\n      </div>\n      <div className='comp'>\n        <Title text='hobies' />\n        <Hobies />\n      </div>\n    </div>\n  );\n};\n\nconst RightSide = () => {\n  return (\n    <div className='right-side side'>\n      <div className='comp'>\n        <Title text='Experience' />\n        <Experience />\n      </div>\n      <div className='comp'>\n        <Title text='education' />\n        <Education />\n      </div>\n      <div className='comp'>\n        <Title text='certifications' />\n        <Certification />\n      </div>\n    </div>\n  );\n};\n\nconst Title = ({ text }) => <h2 className='title'>{text}</h2>;\n\nexport default CvBody;\n","export default __webpack_public_path__ + \"static/media/empty_avatar.cedf234c.png\";","import React, { useState, useContext } from 'react';\nimport emptyAvatar from '../empty_avatar.png';\nimport { AppContext } from './Main';\n\nconst CvHeader = () => {\n  return (\n    <div className='cv-header'>\n      <Avatar />\n      <Identity />\n    </div>\n  );\n};\n\nconst Avatar = () => {\n  const { previewMode } = useContext(AppContext);\n  const [avatar, setAvatar] = useState(emptyAvatar);\n\n  const handleChange = (e) => {\n    setAvatar(URL.createObjectURL(e.target.files[0]));\n  };\n\n  if (previewMode) {\n    return (\n      <div className='avatar'>\n        <img src={avatar} alt='avatar' />\n      </div>\n    );\n  }\n  return (\n    <div className='avatar'>\n      <input type='file' onChange={handleChange} />\n      <img src={avatar} alt='avatar' />\n    </div>\n  );\n};\n\nconst Identity = () => {\n  const { previewMode } = useContext(AppContext);\n  const [header, setHeader] = useState({\n    firstName: 'JOHN',\n    lastName: 'DOE',\n    title: 'Web Designer',\n    profile:\n      'Describe in a few lines your career path, your key skills for the position and your career goals. This is actually an introduction to your cover letter. Describe in a few lines your career path, your key skills for the position and your career goals. This is actually an introduction to your cover letter.',\n    editFlag: false,\n  });\n\n  const handleChange = (e) => {\n    const prop = e.target.name;\n    const value = e.target.value;\n    setHeader({\n      ...header,\n      [prop]: value,\n    });\n  };\n\n  const toggleEdit = () => {\n    setHeader({\n      ...header,\n      editFlag: !header.editFlag,\n    });\n  };\n\n  const showHeader = () => {\n    const { firstName, lastName, title, profile, editFlag } = header;\n    if (previewMode) {\n      return (\n        <div className='identity'>\n          <h1>\n            {firstName} <span>{lastName}</span>\n          </h1>\n          <h2>{title}</h2>\n          <div className='underline'></div>\n          <p>{profile}</p>\n        </div>\n      );\n    }\n    if (!editFlag) {\n      return (\n        <>\n          <div className='identity'>\n            <h1>\n              {firstName} <span>{lastName}</span>\n            </h1>\n            <h2>{title}</h2>\n            <div className='underline'></div>\n            <p>{profile}</p>\n            <button\n              type='button'\n              className='btn btn-center'\n              onClick={toggleEdit}\n            >\n              edit\n            </button>\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        <form className='form' onSubmit={(e) => e.preventDefault()}>\n          <div className='flex'>\n            <label htmlFor='first'>First Name: </label>\n            <input\n              type='text'\n              name='firstName'\n              id='first'\n              value={firstName}\n              onChange={handleChange}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='last'>Last Name: </label>\n            <input\n              type='text'\n              name='lastName'\n              id='last'\n              value={lastName}\n              onChange={handleChange}\n            />\n          </div>\n          <div className='flex'>\n            <label htmlFor='title'>Your Title: </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className='flex'>\n            <label htmlFor='profile'>Profile: </label>\n            <textarea\n              name='profile'\n              id='profile'\n              value={profile}\n              cols='30'\n              rows='10'\n              onChange={handleChange}\n            ></textarea>\n          </div>\n\n          <button type='submit' className='btn btn-center' onClick={toggleEdit}>\n            save\n          </button>\n        </form>\n      </>\n    );\n  };\n\n  return <>{showHeader()}</>;\n};\n\nexport default CvHeader;\n","import React, { forwardRef } from 'react';\nimport CvBody from './CvBody';\nimport CvHeader from './CvHeader';\n\nconst Cv = forwardRef((props, ref) => {\n  return (\n    <div className='cv-container' ref={ref}>\n      <CvHeader />\n      <CvBody />\n    </div>\n  );\n});\n\nexport default Cv;\n","import React, { useRef, useState } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport Cv from './Cv';\n\nconst AppContext = React.createContext();\n\nconst Main = () => {\n  const [previewMode, setPreviewMode] = useState(false);\n  const editCv = () => {\n    return setPreviewMode(false);\n  };\n  const previewCv = () => {\n    return setPreviewMode(true);\n  };\n  const componentRef = useRef(null);\n\n  const handlePrint = useReactToPrint({ content: () => componentRef.current });\n\n  if (previewMode) {\n    return (\n      <main>\n        <AppContext.Provider\n          value={{\n            previewMode,\n          }}\n        >\n          <Cv ref={componentRef} />\n          <button type='button' className='btn btn-center' onClick={editCv}>\n            edit\n          </button>\n\n          <button\n            type='button'\n            className='btn btn-center'\n            onClick={() => {\n              componentRef.current.classList.add('print');\n              return handlePrint();\n            }}\n          >\n            Download\n          </button>\n        </AppContext.Provider>\n      </main>\n    );\n  }\n\n  return (\n    <main>\n      <AppContext.Provider\n        value={{\n          previewMode,\n        }}\n      >\n        <Cv ref={componentRef} />\n        <button type='button' className='btn btn-center' onClick={previewCv}>\n          preview\n        </button>\n      </AppContext.Provider>\n    </main>\n  );\n};\n\nexport { AppContext };\nexport default Main;\n","import React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n\n      <Main />\n\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}